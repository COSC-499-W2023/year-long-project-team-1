version: "3"

services:
    db:
        image: docker.io/library/postgres:16-bullseye
        networks:
            - backend
            - db-admin
        hostname: db
        expose:
            - 5432
        ports:
            - "5432:5432"
        environment:
            POSTGRES_DB: privacypal
            POSTGRES_USER: privacypal
            POSTGRES_PASSWORD: password
        volumes:
            - postgres:/var/lib/pgsql/data
        restart: unless-stopped
        healthcheck:
            test: pg_isready -U privacypal -d privacypal || exit 1
            interval: 10s
            retries: 3
            start_period: 10s
            timeout: 5s

    db-init:
        image: ghcr.io/cosc-499-w2023/privacypal-init-db:0.1.0-dev
        depends_on:
            db:
                condition: service_healthy
        build: ../../web/db
        pull_policy: build
        networks:
            - db-admin
        environment:
            DATABASE_URL: postgresql://privacypal:password@db:5432/privacypal
            PRIVACYPAL_POSTGRES_USERNAME: privacypal
            PRIVACYPAL_POSTGRES_PASSWORD: password
            PRIVACYPAL_POSTGRES_HOST: db
            PRIVACYPAL_POSTGRES_PORT: 5432
            PRIVACYPAL_POSTGRES_DATABASE: privacypal

    db-viewer:
        image: docker.io/dpage/pgadmin4:8
        depends_on:
            db:
                condition: service_healthy
        hostname: db-viewer
        ports:
            - "8989:8989"
        networks:
            - db-admin
        environment:
            PGADMIN_DEFAULT_EMAIL: admin@privacypal.io
            PGADMIN_DEFAULT_PASSWORD: admin
            PGADMIN_LISTEN_PORT: 8989
        volumes:
            - pgadmin:/var/lib/pgadmin
            - ./include/servers.json:/pgadmin4/servers.json
        restart: always
        healthcheck:
            test: wget --no-verbose --tries=1 --spider http://localhost:8989 || exit 1
            interval: 10s
            retries: 3
            start_period: 10s
            timeout: 5s

networks:
    db-admin:

volumes:
    postgres:
        driver: local
    pgadmin:
        driver: local
